h1 #{__("info_no")} #{information._id}

ul#langSelector.nav.nav-tabs
  each loc in locales.availableLocales
    li.nav-item
      a.lang-tab.nav-link(data-lang=`${loc.code}`) #{loc.name}

each loc in locales.availableLocales
  container.localizedPanel.mt-3(data-lang=`${loc.code}`)
    - let info_title = information.labels.find(label => label.locale === loc.code);
    - let info_desc = information.descriptions.find(description => description.locale === loc.code);
    h2(lang=`${loc.code}`) #{info_title.text}
    p #{info_desc.text}
    - let delete_status = ''
    - if (user.permissions.manage_info)
      - if (information.deleted)
        - delete_status = `, ${__({phrase: 'information_deleted', locale: loc.code})}`
      - else
        - delete_status = `, ${__({phrase: 'information_not_deleted', locale: loc.code})}`
    table.table.table-striped.table-hover.addedInfoList.mb-3(data-lang=`${loc.code}`)
      thead
        tr
          th #{__("th_field_label")}
          th #{__("th_field_description")}
          th #{__("info_html_safe")}
      tbody
        each field in information.fields
          - let field_label = field.labels.find(label => label.locale === loc.code);
          - let field_description = field.descriptions.find(description => description.locale === loc.code);
          - let field_html = field.htmlSafe ? __("yes") : __("no")
          tr
            td #{field_label.text}
            td #{field_description.text}
            td #{field_html}

script.
  document.addEventListener('DOMContentLoaded', function() {
    function changeLocaleFocus(locale) {
      const langTabs = document.querySelectorAll('.lang-tab');
      const oldActiveTab = document.querySelector('.active')
      if (oldActiveTab) {
        oldActiveTab.classList.remove('active');
      }
      const newActiveTab = document.querySelector(`.lang-tab[data-lang*="${locale}"]`)
      newActiveTab.classList.add('active');

      const localizedPanels = document.querySelectorAll('.localizedPanel');
      localizedPanels.forEach(function(localizedPanel) {
        localizedPanel.classList.add('d-none');
      });
      const newActiveLocalizedPanel = document.querySelector(`.localizedPanel[data-lang*="${locale}"]`)
      newActiveLocalizedPanel.classList.remove('d-none');
      newActiveLocalizedPanel.classList.add('d-block');
    }

    const langTabs = document.querySelectorAll('.lang-tab');
    langTabs.forEach(function(langTab) {
      langTab.addEventListener('click', function() {
        changeLocaleFocus(this.dataset.lang)
      })
    })

    changeLocaleFocus(`!{locale}`);
  });
