extends layout

block content
    h1.mb-5 #{__("addpage_title")}

    .row.mb-3
        .col-6
            label(for='addFieldInput', class='form-label') #{__("search_field")}:
            input#addFieldInput.form-control(type='text', placeholder=`${__("search_placeholder")}`, onkeyup="searchField()")

    #searchResults.d-none
        ul#searchResultsList.list-group.mb-3
        button(type='button', class='btn btn-primary', data-bs-toggle='modal', data-bs-target='#addFieldModal') #{__("add_new_field")}

    form(id="addForm" action=`/add` method="post")
        hr

        hr#form-sep

        button(type="submit").btn.btn-primary.col-md-2.offset-md-10 #{__("submit_button")}
    
    include partials/modal_add_field.pug

    script(src="/field/field.js")
    script.
        const form = document.getElementById('addForm');
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(form);
            const formDataArray = [];
            let publicValue = false;
            
            for (const [key, value] of formData.entries()) {
                if (key === 'id') {
                    const newObj = { _id: value, fields: [] };
                    formDataArray.push(newObj);
                } else if (key === 'public') {
                    publicValue = value === 'on';
                } else {
                    const lastObjIndex = formDataArray.length - 1;
                    formDataArray[lastObjIndex].fields.push({ _id: key, value: value });
                }
            }

            formDataArray.forEach(obj => {
                obj.public = publicValue;
            });

            fetch('/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formDataArray)
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error('Errore durante l\'invio dei dati al server');
                }
            })
            .then(data => {
                window.location.href = `/doc/${data.savedDocument._id}`;
            })
            .catch(error => {
                console.error('Errore:', error);
            });
        });
